openapi: 3.0.3
info:
  title: Bagsbe API
  version: 1.0.0
  description: |
    OpenAPI specification for Bagsbe baggage tracking and management system.
servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials

  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created

  /users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: User updated
    delete:
      summary: Delete user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted

  /bookings:
    get:
      summary: Get all bookings
      responses:
        '200':
          description: List of bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
    post:
      summary: Create a new booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingInput'
      responses:
        '201':
          description: Booking created

  /bookings/{id}:
    get:
      summary: Get booking by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Booking data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '404':
          description: Booking not found
    put:
      summary: Update booking by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingInput'
      responses:
        '200':
          description: Booking updated
    delete:
      summary: Delete booking by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Booking deleted

  /baggage:
    get:
      summary: Get all baggage
      responses:
        '200':
          description: List of baggage
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Baggage'
    post:
      summary: Register new baggage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaggageInput'
      responses:
        '201':
          description: Baggage registered

  /baggage/{id}:
    get:
      summary: Get baggage by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Baggage data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baggage'
        '404':
          description: Baggage not found
    put:
      summary: Update baggage by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaggageInput'
      responses:
        '200':
          description: Baggage updated
    delete:
      summary: Delete baggage by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Baggage deleted

  /pax:
    get:
      summary: Get all passengers
      responses:
        '200':
          description: List of passengers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pax'
    post:
      summary: Create a new passenger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaxInput'
      responses:
        '201':
          description: Passenger created

  /pax/{id}:
    get:
      summary: Get passenger by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Passenger data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pax'
        '404':
          description: Passenger not found
    put:
      summary: Update passenger by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaxInput'
      responses:
        '200':
          description: Passenger updated
    delete:
      summary: Delete passenger by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Passenger deleted

  /payments:
    get:
      summary: Get all payments
      responses:
        '200':
          description: List of payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
    post:
      summary: Create a new payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInput'
      responses:
        '201':
          description: Payment created

  /payments/{id}:
    get:
      summary: Get payment by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Payment data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '404':
          description: Payment not found
    put:
      summary: Update payment by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInput'
      responses:
        '200':
          description: Payment updated
    delete:
      summary: Delete payment by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Payment deleted

  /flights:
    get:
      summary: Get all flights
      responses:
        '200':
          description: List of flights
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flight'
    post:
      summary: Create a new flight
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightInput'
      responses:
        '201':
          description: Flight created

  /flights/{id}:
    get:
      summary: Get flight by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Flight data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
        '404':
          description: Flight not found
    put:
      summary: Update flight by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightInput'
      responses:
        '200':
          description: Flight updated
    delete:
      summary: Delete flight by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Flight deleted

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        role:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    UserInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
    Booking:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        flight_id:
          type: integer
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    BookingInput:
      type: object
      properties:
        user_id:
          type: integer
        flight_id:
          type: integer
        status:
          type: string
    Baggage:
      type: object
      properties:
        id:
          type: integer
        pax_id:
          type: integer
        tag:
          type: string
        weight:
          type: number
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    BaggageInput:
      type: object
      properties:
        pax_id:
          type: integer
        tag:
          type: string
        weight:
          type: number
        status:
          type: string
    Pax:
      type: object
      properties:
        id:
          type: integer
        booking_id:
          type: integer
        name:
          type: string
        passport:
          type: string
        payment_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    PaxInput:
      type: object
      properties:
        booking_id:
          type: integer
        name:
          type: string
        passport:
          type: string
        payment_id:
          type: integer
    Payment:
      type: object
      properties:
        id:
          type: integer
        amount:
          type: number
        status:
          type: string
        method:
          type: string
        created_at:
          type: string
          format: date-time
    PaymentInput:
      type: object
      properties:
        amount:
          type: number
        status:
          type: string
        method:
          type: string
    Flight:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        origin:
          type: string
        destination:
          type: string
        departure:
          type: string
          format: date-time
        arrival:
          type: string
          format: date-time
        status:
          type: string
    FlightInput:
      type: object
      properties:
        code:
          type: string
        origin:
          type: string
        destination:
          type: string
        departure:
          type: string
          format: date-time
        arrival:
          type: string
          format: date-time
        status:
          type: stringopenapi: 3.0.3
info:
  title: Bagsbe API
  version: 1.0.0
  description: |
    OpenAPI specification for Bagsbe baggage tracking and management system.
servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials

  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created

  /users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: User updated
    delete:
      summary: Delete user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted

  /bookings:
    get:
      summary: Get all bookings
      responses:
        '200':
          description: List of bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
    post:
      summary: Create a new booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingInput'
      responses:
        '201':
          description: Booking created

  /bookings/{id}:
    get:
      summary: Get booking by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Booking data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '404':
          description: Booking not found
    put:
      summary: Update booking by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingInput'
      responses:
        '200':
          description: Booking updated
    delete:
      summary: Delete booking by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Booking deleted

  /baggage:
    get:
      summary: Get all baggage
      responses:
        '200':
          description: List of baggage
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Baggage'
    post:
      summary: Register new baggage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaggageInput'
      responses:
        '201':
          description: Baggage registered

  /baggage/{id}:
    get:
      summary: Get baggage by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Baggage data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baggage'
        '404':
          description: Baggage not found
    put:
      summary: Update baggage by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaggageInput'
      responses:
        '200':
          description: Baggage updated
    delete:
      summary: Delete baggage by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Baggage deleted

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        role:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    UserInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
    Booking:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        flight_id:
          type: integer
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    BookingInput:
      type: object
      properties:
        user_id:
          type: integer
        flight_id:
          type: integer
        status:
          type: string
    Baggage:
      type: object
      properties:
        id:
          type: integer
        pax_id:
          type: integer
        tag:
          type: string
        weight:
          type: number
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    BaggageInput:
      type: object
      properties:
        pax_id:
          type: integer
        tag:
          type: string
        weight:
          type: number
        status:
          type: string
